REM Application Name Here (NEWAPP.BAS)
REM Version 1.0
REM Preforms function...
REM Made by: Your Name Here
REM Send any bugs, comments or ideas to: (Email Address)
REM Made with APPDEV framework 2.0.0

START:
  $t = "Application Name (titlebar)"
  $z = "FULLINT"
  GOSUB STARTPRG
  GOTO KEYBOARD

CONTENT:
  REM
RETURN

KEYBOARD:
  WAITKEY K
  IF K = 27 THEN RETURN
GOTO KEYBOARD

REM >>>APPDEV functions<<<
MOVE 1 2
PRINT "Fatal: Application ran into framework!"
END
STARTPRG:
  CLS
  CURSOR OFF
  FOR X = 65000 TO 65535
    POKE 0 X
  NEXT X
  GOSUB DEFCOL
  A = 0
  IF $z = "NOINT" THEN A = 1
  IF $z = "BASEINT" THEN A = 2
  IF $z = "FULLINT" THEN A = 3
  IF $z = "" THEN A = 3
  $e = "INVALID RUNLEVEL!"
  IF A = 0 THEN GOSUB ERRBOX
  IF A = 0 THEN GOSUB ENDPROG
  IF A > 2 THEN GOSUB SETTITLE
  C = 0
  H = 0
  J = 0
  V = 0
  W = 0
  X = 0
  Y = 0
  Z = 0
  $b = ""
  $c = ""
  $e = ""
  $f = ""
  $g = ""
  $t = ""
  IF A > 2 THEN C = 7
  IF A > 2 THEN H = 8
  IF A > 2 THEN T = 7
  IF A > 2 THEN GOSUB CONTENT
  IF A > 1 THEN Z = 7
  IF A > 1 THEN GOSUB BORDER
  A = 0
  RETURN
mesbox:
  cursor off
  gosub box
  move 22 9
  print $t 
  move 22 11
  print $b
  move 22 12
  print $c
  move 22 13
  print $e
  move 22 14 
  print $f
  move 22 15
  print $g
  move 22 16
  print "Press any key to continue..."
  waitkey k
  gosub clear
  return
inpbox:
  cursor off
  gosub box   
  move 22 9 
  print $t
  move 22 12
  print $b
  move 22 13
  print $c
  move 22 14
  print ">"
  move 23 14
  cursor on
  a = 0
  $i = ""
  if v = 0 then input a
  if v = 1 then input $i
  cursor off
  gosub clear
  return
errbox:
  gosub box
  move 22 9
  print "Error"
  move 22 12
  print $e
  move 22 14
  print "Press any key to continue."
  cursor on
  move 48 14
  waitkey k
  if k = 27 then gosub endprog
  cursor off
  gosub clear
  return
dinbox:
  gosub box
  move 22 9
  print $t
  move 22 11
  print $b
  move 22 12
  print ">"
  move 23 12
  cursor on
  if v = 0 then input b
  if v = 1 then input $b
  cursor off
  move 22 13
  print $c
  move 22 14
  print ">"
  move 23 14
  cursor on
  if v = 0 then input d
  if v = 1 then input $c
  cursor off
  gosub clear
  return
numbox:
  gosub box
  move 22 9
  print $t
  if $b = "" then goto numboxa
  move 22 11
  print $b
  move 22 12
  print a
  numboxa:
  if $c = "" then goto numboxb
  move 22 13
  print $c
  move 22 14
  print b
  numboxb:
  move 22 16
  print "Press any key to continue..."
  waitkey j
  gosub clear
  return
clear:
refresh:
  cls
  if $z = "NOINT" then return
  gosub border
  gosub title
  gosub content
  return
defcol:
  rem Now for the colour routine, thanks wisecracker for this.
  rem This allows us to print text colours other than white
  rem a text byte is stored at 65520 and a colour at 65525
  poke 156 65515
  poke 80 65516
  poke 83 65517
  poke 81 65518
  poke 184 65519
  poke 32 65520
  poke 9 65521
  poke 183 65522
  poke 0 65523
  poke 179 65524
  poke 7 65525
  poke 185 65526
  poke 1 65527
  poke 0 65528
  poke 205 65529
  poke 16 65530
  poke 89 65531
  poke 91 65532
  poke 88 65533
  poke 157 65534
  poke 195 65535
  return
endprog:
  cls
  cursor on
  end
border:
  peek j 65525
  poke z 65525
  poke 218 65520
  rem now call it
  call 65515
  poke 196 65520
  for x = 1 to 78
    move x 0
    call 65515
  next x
  move 79 0
  poke 191 65520
  call 65515
  move 0 1
  poke 179 65520
  call 65515
  move 79 1
  call 65515
  move 0 2
  poke 195 65520
  call 65515
  move 79 2
  poke 180 65520
  call 65515
  poke 196 65520
  rem 2nd line
  for x = 1 to 78
    move x 2
    call 65515
  next x
  poke 179 65520 
  for x = 3 to 23
    move 0 x
    call 65515
    move 79 x
    call 65515
  next x
  move 0 24
  poke 192 65520
  call 65515
  move 79 24
  poke 217 65520
  call 65515
  poke 196 65520  
  for x = 1 to 78
    move x 24
    call 65515
  next x
  poke j 65525
  return
settitle:
  poke z 65525
  poke z 65439 
  move 2 1
  print $t
  j = 65439
  for x = 2 to 76
    j = j + 1
    move x 1
    curschar w
    poke w j
    poke w 65520
    call 65515
  next x
  return
title:
  peek j 65439
  poke j 65525
  j = 65439
  for x = 2 to 76
    j = j + 1
    peek w j
    poke w 65520
    move x 1
    print chr w
    move x 1
    call 65515
  next x
  return
box:
  peek j 65525
  poke t 65525
  move 20 8
  poke 218 65520
  call 65515
  move 59 8
  poke 191 65520
  call 65515
  poke 196 65520
  for x = 21 to 58
    move x 8
    call 65515
  next x
  move 20 9
  poke 179 65520
  call 65515
  move 59 9
  call 65515
  move 20 10
  poke 195 65520
  call 65515
  move 59 10
  poke 180 65520
  call 65515
  poke 179 65520
  for x = 11 to 16
    move 20 x
    call 65515
    move 59 x
    call 65515
  next x
  move 20 17
  poke 192 65520
  call 65515
  move 59 17
  poke 217 65520
  call 65515
  poke 196 65520
  for x = 21 to 58
    move x 10
    call 65515
  next x
  poke 196 65520
  for x = 21 to 58
    move x 17
    call 65515
  next x
  move 21 9
  print "                                      "
  for x = 11 to 16
    move 21 x
    print "                                      "
  next x
  poke 7 65525
  for x = 21 to 58
    move x 9
    curschar w
    poke w 65520
    call 65515
  next x
  for y = 11 to 16
    for x = 21 to 58
      move x y
      curschar w
      poke w 65520
      call 65515
    next x
  next y
  poke j 65525
  return
highlight:
  j = h
  j = j * 16
  j = j + c
  poke j 65525
  move x y
  curschar j
  move x y 
  poke j 65520
  call 65515
  return
colour:
  poke c 65525
  move x y 
  curschar j
  move x y
  poke j 65520
  call 65515
  return
arrayget:
  if $v = "a" then j = 0
  if $v = "b" then j = 100
  if $v = "c" then j = 200
  if $v = "d" then j = 300
  j = j + 60000
  if $v = "a" then x = a
  if $v = "b" then x = b
  if $v = "c" then x = c
  if $v = "d" then x = d
  if x > 99 then $e = "Array over maximum"
  if x < 0 then $e = "Number below zero"
  if x > 99 then goto error
  if x < 0 then goto error
  j = j + x
  if $v = "a" then peek a j
  if $v = "b" then peek b j
  if $v = "c" then peek c j
  if $v = "d" then peek d j
  return
arrayput:
  if $v = "a" then j = 0
  if $v = "b" then j = 100
  if $v = "c" then j = 200
  if $v = "d" then j = 300
  j = j + 60000
  if $v = "a" then x = a
  if $v = "b" then x = b
  if $v = "c" then x = c
  if $v = "d" then x = d
  if x > 99 then $e = "Array over maximum"
  if x < 0 then $e = "Number below zero"
  if x > 99 then goto error
  if x < 0 then goto error
  j = j + x
  poke v j
  return
xput:
  $e = "XPUT: invalid location!"
  if e < 0 then goto errbox
  if e > 8096 then goto errbox
  j = 32767 - e
  poke v j
  return
xget:
  $e = "XGET: invalid location!"
  if e < 0 then goto errbox
  if e > 8096 then goto errbox
  j = 32767 - e
  peek v j
  return
loadbox:
  poke v 65434
  u = 11453
  findend:
    u = u + 1
    peek v u
    if v > 0 then goto findend
  u = u - 2
  poke 0 65435
  poke 1 65436
  peek w 65437
  poke 0 65438
  gosub box
  menufunc:
    gosub menua
    if v = 6 then gosub loadback
    if v = 6 then poke 0 65438
    if v = 6 then goto menufunc
    if v = 7 then gosub loadforw
    if v = 7 then poke 4 65438
    if v = 7 then goto menufunc
  poke 0 65436
  x = s
  y = r
  peek v 65434
  load $i v
  $e = "File not found! Has disk changed?"
  j = r
  v = s
  r = y
  s = x
  if j = 1 then gosub errbox
  return 
menubox:
  gosub box
  poke 0 65436
  menufun2:
    gosub menua
    if v < 6 then return
    if v = 6 then poke 0 65438
    if v = 7 then poke 4 65438
    goto menufun2
menua:
  peek j 65436
  if j = 1 then goto loadint
  move 22 9
  print $t
  move 22 11
  print $b
  move 22 12
  print $c
  move 22 13
  print $e
  move 22 14
  print $f
  move 22 15
  print $g
  loadret:
  move 22 16
  print "Press enter to select."
  poke c 65525
  peek w 65438
  w = w + 11
  y = 9
  for x = 22 to 58
    gosub colour
  next x
  for y = 11 to 16
    for x = 22 to 58
      gosub colour
      if w = y then gosub highlight
    next x
  next y
  w = w - 11
  menuloop:
  waitkey j
  x = 0
  v = 0
  if j = 1 then gosub menublan
  if j = 1 then w = w - 1
  if w < 0 then x = 1
  if x = 1 then w = 5 
  if x = 1 then goto refafter
  if j = 1 then poke w 65438
  if j = 1 then gosub menuchan
  if j = 1 then goto menuloop
  if j = 2 then gosub menublan
  if j = 2 then w = w + 1
  if w > 4 then x = 2
  if x = 2 then w = 6
  if x = 2 then goto refafter
  if j = 2 then poke w 65438
  if j = 2 then gosub menuchan
  if j = 2 then goto menuloop
  if j = 13 then goto refaftr2
  if j = 27 then gosub endprog
  goto menuloop
  refaftr3:
    peek w 65438
    w = w + 11
    move 23 w
    $i = "            "
    x = & $i
    y = 23
    getfilen:
      move y w
      curschar j
      if j < 33 then poke 0 x
      if j < 33 then return
      poke j x
      x = x + 1
      y = y + 1
      goto getfilen
  refaftr2:
    peek w 65436
    if w = 1 then gosub refaftr3
    gosub clear
    peek w 65438
    v = w + 1
    return
  refafter:
    poke w 65438
    for y = 11 to 16
      move 21 y
      for x = 21 to 58
        print " ";
      next x
    next y
    peek w 65438
    if w = 4 then gosub menuchan
    if w = 6 then gosub menuchan
    v = w + 1
    return
  menublan:
    poke c 65525
    for y = 11 to 16
      for x = 22 to 58
        move x y
        curschar v
        poke v 65520
        call 65515
      next x
    next y
    return
  menuchan:
    poke w 65433
    peek w 65436
    if w = 1 then goto chanload
    peek w 65433
    if w = 6 then w = 4
    if w = 5 then w = 0
    poke w 65433
    chanload:
    peek w 65433
    w = w + 11
    v = h * 16
    v = v + c
    poke v 65525
    for y = 11 to 16
      for x = 22 to 58
        if w = y then move x y
        if w = y then curschar v
        if w = y then poke v 65520
        if w = y then call 65515
      next x
    next y
    w = w - 11
    peek w 65438
    return
loadint:
  move 22 9
  print "Select a file to load..."
  w = 0
  peek j 65435
  j = j + 11454
  x = 23
  y = 11
  move x y
  fncon:
    move x y
    peek i j
    if i = 0 then goto loadret
    print chr i
    if j > u then goto loadover
    if j > u then gosub loadback
    if j > u then goto loadret
    if i = ',' then w = w + 1
    if i = ',' then move x y
    if i = ',' then print " "
    if i = ',' then x = 22
    if i = ',' then y = y + 1
    if w = 5 then goto loadret  
    x = x + 1
    j = j + 1
  goto fncon
loadover:
  gosub loadback
  poke u 65435
  goto loadret
loadforw:
  x = 0 
  j = 0
  peek j 65435
  j = j + 11454
  lmfc:
    peek x j
    j = j + 1
    if x = 44 then j = j - 11454
    if x = 44 then poke j 65435
    if x = 44 then return
  goto lmfc
loadback:
  x = 0
  j = 0
  y = 0
  peek j 65435
  j = j + 11454
  lmbc:
    peek x j
    j = j - 1
    if x = 0 then j = 11008
    if x = 0 then poke j 65435
    if x = 0 then return
    if j < 0 then y = 3
    if y = 3 then j = 0
    if y = 3 then poke 0 65435
    if y = 3 then return
    if x = ',' then y = y + 1
    if y = 2 then j = j - 11454
    if y = 2 then j = j + 2
    if y = 2 then poke j 65435
    if y = 2 then return
    goto lmbc   
